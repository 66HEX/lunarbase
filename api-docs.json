{
  "openapi": "3.1.0",
  "info": {
    "title": "LunarBase API",
    "description": "A powerful backend-as-a-service API built with Rust, Axum, and Diesel ORM",
    "contact": {
      "name": "LunarBase Team",
      "email": "contact@lunarbase.dev"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "0.1.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000/api",
      "description": "Local development server"
    },
    {
      "url": "https://api.lunarbase.dev",
      "description": "Production server"
    }
  ],
  "paths": {
    "/api/collections/{name}": {
      "put": {
        "tags": [
          "handlers::collections"
        ],
        "summary": "Update collection",
        "operationId": "update_collection",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Collection name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCollectionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Collection updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse_CollectionResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Insufficient permissions"
          },
          "404": {
            "description": "Collection not found"
          }
        },
        "security": [
          {
            "bearer_auth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "handlers::collections"
        ],
        "summary": "Delete collection",
        "operationId": "delete_collection",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Collection name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Collection deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Insufficient permissions"
          },
          "404": {
            "description": "Collection not found"
          }
        },
        "security": [
          {
            "bearer_auth": []
          }
        ]
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "User login endpoint with timing attack protection and account lockout",
        "operationId": "login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse_AuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "423": {
            "description": "Account locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/me": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Get current user profile (protected endpoint)",
        "operationId": "me",
        "responses": {
          "200": {
            "description": "User profile retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse_Value"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          }
        ]
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Refresh token endpoint",
        "operationId": "refresh_token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {

              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Token refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse_AuthResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid refresh token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Register a new user",
        "operationId": "register",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse_AuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "User already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/register-admin": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Admin registration endpoint - allows creating first admin or additional admins",
        "operationId": "register_admin",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Admin registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse_AuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Admin already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/collections": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "List all collections",
        "operationId": "list_collections",
        "responses": {
          "200": {
            "description": "Collections retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse_Vec_CollectionResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Collections"
        ],
        "summary": "Create a new collection",
        "operationId": "create_collection",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCollectionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Collection created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse_CollectionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          }
        ]
      }
    },
    "/collections/stats": {
      "get": {
        "tags": [
          "Collections"
        ],
        "operationId": "get_collections_stats",
        "responses": {
          "200": {
            "description": "Collection statistics retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse_CollectionStats"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          }
        ]
      }
    },
    "/collections/{collection_name}/ownership/my-records": {
      "get": {
        "tags": [
          "Ownership"
        ],
        "summary": "Get records owned by the current user",
        "operationId": "get_my_owned_records",
        "parameters": [
          {
            "name": "collection_name",
            "in": "path",
            "description": "Collection name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of records to return",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Number of records to skip",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Owned records retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse_Value"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Collection not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          }
        ]
      }
    },
    "/collections/{collection_name}/ownership/stats": {
      "get": {
        "tags": [
          "Ownership"
        ],
        "summary": "Get ownership statistics for a collection",
        "operationId": "get_ownership_stats",
        "parameters": [
          {
            "name": "collection_name",
            "in": "path",
            "description": "Collection name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ownership statistics retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse_Value"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions - Admin only",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Collection not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          }
        ]
      }
    },
    "/collections/{collection_name}/ownership/users/{user_id}/records": {
      "get": {
        "tags": [
          "Ownership"
        ],
        "summary": "Get records owned by a specific user (admin only)",
        "operationId": "get_user_owned_records",
        "parameters": [
          {
            "name": "collection_name",
            "in": "path",
            "description": "Collection name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of records to return",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Number of records to skip",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User owned records retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse_Value"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions - Admin only",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          }
        ]
      }
    },
    "/collections/{collection_name}/records": {
      "get": {
        "tags": [
          "Records"
        ],
        "operationId": "list_records",
        "parameters": [
          {
            "name": "collection_name",
            "in": "path",
            "description": "Collection name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit number of records",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset for pagination",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort field",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Filter expression",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Records retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse_Vec_RecordResponse"
                }
              }
            }
          },
          "404": {
            "description": "Collection not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Records"
        ],
        "operationId": "create_record",
        "parameters": [
          {
            "name": "collection_name",
            "in": "path",
            "description": "Collection name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRecordRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse_RecordResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Collection not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          }
        ]
      }
    },
    "/collections/{collection_name}/records/{record_id}": {
      "get": {
        "tags": [
          "Records"
        ],
        "operationId": "get_record",
        "parameters": [
          {
            "name": "collection_name",
            "in": "path",
            "description": "Collection name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "record_id",
            "in": "path",
            "description": "Record ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse_RecordResponse"
                }
              }
            }
          },
          "404": {
            "description": "Record not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Records"
        ],
        "operationId": "update_record",
        "parameters": [
          {
            "name": "collection_name",
            "in": "path",
            "description": "Collection name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "record_id",
            "in": "path",
            "description": "Record ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRecordRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Record updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse_RecordResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Record not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Records"
        ],
        "operationId": "delete_record",
        "parameters": [
          {
            "name": "collection_name",
            "in": "path",
            "description": "Collection name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "record_id",
            "in": "path",
            "description": "Record ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Record deleted successfully"
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Record not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          }
        ]
      }
    },
    "/collections/{collection_name}/records/{record_id}/ownership": {
      "get": {
        "tags": [
          "Ownership"
        ],
        "summary": "Check if current user owns a specific record",
        "operationId": "check_record_ownership",
        "parameters": [
          {
            "name": "collection_name",
            "in": "path",
            "description": "Collection name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "record_id",
            "in": "path",
            "description": "Record ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ownership status retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse_Value"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Record not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          }
        ]
      }
    },
    "/collections/{collection_name}/records/{record_id}/ownership/transfer": {
      "post": {
        "tags": [
          "Ownership"
        ],
        "summary": "Transfer ownership of a record",
        "operationId": "transfer_record_ownership",
        "parameters": [
          {
            "name": "collection_name",
            "in": "path",
            "description": "Collection name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "record_id",
            "in": "path",
            "description": "Record ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransferOwnershipRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Ownership transferred successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse_Value"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Record not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          }
        ]
      }
    },
    "/collections/{name}": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "Get collection by name",
        "operationId": "get_collection",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Collection name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Collection retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse_CollectionResponse"
                }
              }
            }
          },
          "404": {
            "description": "Collection not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/collections/{name}/schema": {
      "get": {
        "tags": [
          "Collections"
        ],
        "operationId": "get_collection_schema",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Collection name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Collection schema retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse_Value"
                }
              }
            }
          },
          "404": {
            "description": "Collection not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "tags": [
          "Health"
        ],
        "summary": "Enhanced health check endpoint with detailed system information",
        "operationId": "health_check",
        "responses": {
          "200": {
            "description": "Service is healthy with detailed system information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service is unhealthy",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          }
        }
      }
    },
    "/permissions/collections/{collection_name}": {
      "get": {
        "tags": [
          "Permissions"
        ],
        "summary": "Get collection permissions",
        "operationId": "get_collection_permissions",
        "parameters": [
          {
            "name": "collection_name",
            "in": "path",
            "description": "Collection name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Collection permissions retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse_Value"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions - Admin only",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Collection not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Permissions"
        ],
        "summary": "Set collection permissions for a role",
        "operationId": "set_collection_permission",
        "parameters": [
          {
            "name": "collection_name",
            "in": "path",
            "description": "Collection name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetCollectionPermissionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Collection permission set successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse_CollectionPermission"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions - Admin only",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Collection not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          }
        ]
      }
    },
    "/permissions/collections/{collection_name}/records": {
      "get": {
        "tags": [
          "Record Permissions"
        ],
        "summary": "List all record permissions for a collection",
        "operationId": "list_record_permissions",
        "parameters": [
          {
            "name": "collection_name",
            "in": "path",
            "description": "Collection name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record permissions listed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse_Vec_RecordPermission"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Collection not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          }
        ]
      }
    },
    "/permissions/collections/{collection_name}/records/{record_id}/users/{user_id}": {
      "delete": {
        "tags": [
          "Record Permissions"
        ],
        "summary": "Remove permissions for a specific record",
        "operationId": "remove_record_permission",
        "parameters": [
          {
            "name": "collection_name",
            "in": "path",
            "description": "Collection name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "record_id",
            "in": "path",
            "description": "Record ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record permission removed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse_String"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Record not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          }
        ]
      }
    },
    "/permissions/records/{record_id}": {
      "get": {
        "tags": [
          "Record Permissions"
        ],
        "summary": "Get permissions for a specific record",
        "operationId": "get_record_permissions",
        "parameters": [
          {
            "name": "record_id",
            "in": "path",
            "description": "Record ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record permissions retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse_Value"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Record not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Record Permissions"
        ],
        "summary": "Set permissions for a specific record",
        "operationId": "set_record_permission",
        "parameters": [
          {
            "name": "record_id",
            "in": "path",
            "description": "Record ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetRecordPermissionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Record permission set successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse_RecordPermission"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Record not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          }
        ]
      }
    },
    "/permissions/roles": {
      "get": {
        "tags": [
          "Permissions"
        ],
        "summary": "List all roles",
        "operationId": "list_roles",
        "responses": {
          "200": {
            "description": "Roles retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse_Vec_Role"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions - Admin only",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Permissions"
        ],
        "summary": "Create a new role",
        "operationId": "create_role",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRoleRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Role created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse_Role"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions - Admin only",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          }
        ]
      }
    },
    "/permissions/roles/{role_name}": {
      "get": {
        "tags": [
          "Permissions"
        ],
        "summary": "Get role by name",
        "operationId": "get_role",
        "parameters": [
          {
            "name": "role_name",
            "in": "path",
            "description": "Role name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Role retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse_Role"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions - Admin only",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Role not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          }
        ]
      }
    },
    "/permissions/users/{user_id}/collections/{collection_name}": {
      "get": {
        "tags": [
          "Permissions"
        ],
        "summary": "Get collection permissions for a specific user",
        "operationId": "get_user_collection_permissions",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collection_name",
            "in": "path",
            "description": "Collection name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User collection permissions retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse_Value"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions - Admin only",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "User or collection not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Permissions"
        ],
        "summary": "Set collection permissions for a specific user",
        "operationId": "set_user_collection_permission",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "collection_name",
            "in": "path",
            "description": "Collection name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetUserCollectionPermissionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User collection permission set successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse_UserCollectionPermission"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions - Admin only",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "User or collection not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          }
        ]
      }
    },
    "/ws": {
      "get": {
        "tags": [
          "WebSocket"
        ],
        "summary": "Handle WebSocket connection upgrade\nWebSocket connection handler",
        "operationId": "websocket_handler",
        "responses": {
          "101": {
            "description": "WebSocket connection established"
          },
          "400": {
            "description": "Bad request - WebSocket upgrade failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          }
        ]
      }
    },
    "/ws/stats": {
      "get": {
        "tags": [
          "WebSocket"
        ],
        "summary": "Get WebSocket connection statistics (Admin only)\nGet WebSocket connection statistics",
        "operationId": "websocket_stats",
        "responses": {
          "200": {
            "description": "WebSocket statistics retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse_WebSocketStats"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions - Admin only",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          }
        ]
      }
    },
    "/ws/status": {
      "get": {
        "tags": [
          "WebSocket"
        ],
        "summary": "Get WebSocket connection count (public endpoint)\nGet WebSocket service status",
        "operationId": "websocket_status",
        "responses": {
          "200": {
            "description": "WebSocket status retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse_WebSocketStatus"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer_auth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ApiResponse_AuthResponse": {
        "type": "object",
        "required": [
          "success",
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "user",
              "access_token",
              "refresh_token",
              "expires_in"
            ],
            "properties": {
              "access_token": {
                "type": "string",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
              },
              "expires_in": {
                "type": "integer",
                "format": "int64",
                "example": 3600
              },
              "refresh_token": {
                "type": "string",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
              },
              "user": {
                "$ref": "#/components/schemas/UserResponse"
              }
            }
          },
          "message": {
            "type": [
              "string",
              "null"
            ]
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "ApiResponse_CollectionPermission": {
        "type": "object",
        "required": [
          "success",
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "id",
              "collection_id",
              "role_id",
              "can_create",
              "can_read",
              "can_update",
              "can_delete",
              "can_list",
              "created_at",
              "updated_at"
            ],
            "properties": {
              "can_create": {
                "type": "boolean"
              },
              "can_delete": {
                "type": "boolean"
              },
              "can_list": {
                "type": "boolean"
              },
              "can_read": {
                "type": "boolean"
              },
              "can_update": {
                "type": "boolean"
              },
              "collection_id": {
                "type": "integer",
                "format": "int32"
              },
              "created_at": {
                "type": "string",
                "format": "date-time"
              },
              "id": {
                "type": "integer",
                "format": "int32"
              },
              "role_id": {
                "type": "integer",
                "format": "int32"
              },
              "updated_at": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "message": {
            "type": [
              "string",
              "null"
            ]
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "ApiResponse_CollectionResponse": {
        "type": "object",
        "required": [
          "success",
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "id",
              "name",
              "schema",
              "is_system",
              "created_at",
              "updated_at"
            ],
            "properties": {
              "created_at": {
                "type": "string",
                "example": "2024-01-01 12:00:00"
              },
              "description": {
                "type": [
                  "string",
                  "null"
                ],
                "example": "Collection for storing product data"
              },
              "display_name": {
                "type": [
                  "string",
                  "null"
                ],
                "example": "Product Collection"
              },
              "id": {
                "type": "integer",
                "format": "int32",
                "example": 1
              },
              "is_system": {
                "type": "boolean",
                "example": false
              },
              "name": {
                "type": "string",
                "example": "products"
              },
              "schema": {
                "$ref": "#/components/schemas/CollectionSchema"
              },
              "updated_at": {
                "type": "string",
                "example": "2024-01-01 12:00:00"
              }
            }
          },
          "message": {
            "type": [
              "string",
              "null"
            ]
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "ApiResponse_CollectionStats": {
        "type": "object",
        "required": [
          "success",
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "total_collections",
              "total_records",
              "collections_by_type",
              "records_per_collection",
              "field_types_distribution",
              "average_records_per_collection"
            ],
            "properties": {
              "average_records_per_collection": {
                "type": "number",
                "format": "double"
              },
              "collections_by_type": {
                "type": "object",
                "additionalProperties": {
                  "type": "integer",
                  "format": "int64"
                },
                "propertyNames": {
                  "type": "string"
                }
              },
              "field_types_distribution": {
                "type": "object",
                "additionalProperties": {
                  "type": "integer",
                  "format": "int64"
                },
                "propertyNames": {
                  "type": "string"
                }
              },
              "largest_collection": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "records_per_collection": {
                "type": "object",
                "additionalProperties": {
                  "type": "integer",
                  "format": "int64"
                },
                "propertyNames": {
                  "type": "string"
                }
              },
              "smallest_collection": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "total_collections": {
                "type": "integer",
                "format": "int64"
              },
              "total_records": {
                "type": "integer",
                "format": "int64"
              }
            }
          },
          "message": {
            "type": [
              "string",
              "null"
            ]
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "ApiResponse_RecordPermission": {
        "type": "object",
        "required": [
          "success",
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "id",
              "record_id",
              "collection_id",
              "user_id",
              "can_read",
              "can_update",
              "can_delete",
              "created_at"
            ],
            "properties": {
              "can_delete": {
                "type": "boolean"
              },
              "can_read": {
                "type": "boolean"
              },
              "can_update": {
                "type": "boolean"
              },
              "collection_id": {
                "type": "integer",
                "format": "int32"
              },
              "created_at": {
                "type": "string",
                "format": "date-time"
              },
              "id": {
                "type": "integer",
                "format": "int32"
              },
              "record_id": {
                "type": "integer",
                "format": "int32"
              },
              "user_id": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "message": {
            "type": [
              "string",
              "null"
            ]
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "ApiResponse_RecordResponse": {
        "type": "object",
        "required": [
          "success",
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "id",
              "collection_id",
              "data",
              "created_at",
              "updated_at"
            ],
            "properties": {
              "collection_id": {
                "type": "string",
                "example": "products"
              },
              "created_at": {
                "type": "string",
                "example": "2024-01-01 12:00:00"
              },
              "data": {

              },
              "id": {
                "type": "string",
                "example": "1"
              },
              "updated_at": {
                "type": "string",
                "example": "2024-01-01 12:00:00"
              }
            }
          },
          "message": {
            "type": [
              "string",
              "null"
            ]
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "ApiResponse_Role": {
        "type": "object",
        "required": [
          "success",
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "id",
              "name",
              "priority",
              "created_at",
              "updated_at"
            ],
            "properties": {
              "created_at": {
                "type": "string",
                "format": "date-time"
              },
              "description": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "id": {
                "type": "integer",
                "format": "int32"
              },
              "name": {
                "type": "string"
              },
              "priority": {
                "type": "integer",
                "format": "int32"
              },
              "updated_at": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "message": {
            "type": [
              "string",
              "null"
            ]
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "ApiResponse_String": {
        "type": "object",
        "required": [
          "success",
          "data"
        ],
        "properties": {
          "data": {
            "type": "string"
          },
          "message": {
            "type": [
              "string",
              "null"
            ]
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "ApiResponse_UserCollectionPermission": {
        "type": "object",
        "required": [
          "success",
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "id",
              "user_id",
              "collection_id",
              "created_at",
              "updated_at"
            ],
            "properties": {
              "can_create": {
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "can_delete": {
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "can_list": {
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "can_read": {
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "can_update": {
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "collection_id": {
                "type": "integer",
                "format": "int32"
              },
              "created_at": {
                "type": "string",
                "format": "date-time"
              },
              "id": {
                "type": "integer",
                "format": "int32"
              },
              "updated_at": {
                "type": "string",
                "format": "date-time"
              },
              "user_id": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "message": {
            "type": [
              "string",
              "null"
            ]
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "ApiResponse_UserResponse": {
        "type": "object",
        "required": [
          "success",
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "id",
              "email",
              "username",
              "is_verified",
              "role",
              "created_at"
            ],
            "properties": {
              "created_at": {
                "type": "string",
                "format": "date-time"
              },
              "email": {
                "type": "string",
                "example": "user@example.com"
              },
              "id": {
                "type": "integer",
                "format": "int32",
                "example": 1
              },
              "is_verified": {
                "type": "boolean",
                "example": true
              },
              "role": {
                "type": "string",
                "example": "user"
              },
              "username": {
                "type": "string",
                "example": "john_doe"
              }
            }
          },
          "message": {
            "type": [
              "string",
              "null"
            ]
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "ApiResponse_Value": {
        "type": "object",
        "required": [
          "success",
          "data"
        ],
        "properties": {
          "data": {

          },
          "message": {
            "type": [
              "string",
              "null"
            ]
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "ApiResponse_Vec_CollectionResponse": {
        "type": "object",
        "required": [
          "success",
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "id",
                "name",
                "schema",
                "is_system",
                "created_at",
                "updated_at"
              ],
              "properties": {
                "created_at": {
                  "type": "string",
                  "example": "2024-01-01 12:00:00"
                },
                "description": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "example": "Collection for storing product data"
                },
                "display_name": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "example": "Product Collection"
                },
                "id": {
                  "type": "integer",
                  "format": "int32",
                  "example": 1
                },
                "is_system": {
                  "type": "boolean",
                  "example": false
                },
                "name": {
                  "type": "string",
                  "example": "products"
                },
                "schema": {
                  "$ref": "#/components/schemas/CollectionSchema"
                },
                "updated_at": {
                  "type": "string",
                  "example": "2024-01-01 12:00:00"
                }
              }
            }
          },
          "message": {
            "type": [
              "string",
              "null"
            ]
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "ApiResponse_Vec_RecordPermission": {
        "type": "object",
        "required": [
          "success",
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "id",
                "record_id",
                "collection_id",
                "user_id",
                "can_read",
                "can_update",
                "can_delete",
                "created_at"
              ],
              "properties": {
                "can_delete": {
                  "type": "boolean"
                },
                "can_read": {
                  "type": "boolean"
                },
                "can_update": {
                  "type": "boolean"
                },
                "collection_id": {
                  "type": "integer",
                  "format": "int32"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time"
                },
                "id": {
                  "type": "integer",
                  "format": "int32"
                },
                "record_id": {
                  "type": "integer",
                  "format": "int32"
                },
                "user_id": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "message": {
            "type": [
              "string",
              "null"
            ]
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "ApiResponse_Vec_RecordResponse": {
        "type": "object",
        "required": [
          "success",
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "id",
                "collection_id",
                "data",
                "created_at",
                "updated_at"
              ],
              "properties": {
                "collection_id": {
                  "type": "string",
                  "example": "products"
                },
                "created_at": {
                  "type": "string",
                  "example": "2024-01-01 12:00:00"
                },
                "data": {

                },
                "id": {
                  "type": "string",
                  "example": "1"
                },
                "updated_at": {
                  "type": "string",
                  "example": "2024-01-01 12:00:00"
                }
              }
            }
          },
          "message": {
            "type": [
              "string",
              "null"
            ]
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "ApiResponse_Vec_Role": {
        "type": "object",
        "required": [
          "success",
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "id",
                "name",
                "priority",
                "created_at",
                "updated_at"
              ],
              "properties": {
                "created_at": {
                  "type": "string",
                  "format": "date-time"
                },
                "description": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "id": {
                  "type": "integer",
                  "format": "int32"
                },
                "name": {
                  "type": "string"
                },
                "priority": {
                  "type": "integer",
                  "format": "int32"
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          "message": {
            "type": [
              "string",
              "null"
            ]
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "ApiResponse_WebSocketStats": {
        "type": "object",
        "required": [
          "success",
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "total_connections",
              "authenticated_connections",
              "total_subscriptions",
              "subscriptions_by_collection"
            ],
            "properties": {
              "authenticated_connections": {
                "type": "integer",
                "minimum": 0
              },
              "subscriptions_by_collection": {
                "type": "object",
                "additionalProperties": {
                  "type": "integer",
                  "minimum": 0
                },
                "propertyNames": {
                  "type": "string"
                }
              },
              "total_connections": {
                "type": "integer",
                "minimum": 0
              },
              "total_subscriptions": {
                "type": "integer",
                "minimum": 0
              }
            }
          },
          "message": {
            "type": [
              "string",
              "null"
            ]
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "ApiResponse_WebSocketStatus": {
        "type": "object",
        "required": [
          "success",
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "connections",
              "subscriptions",
              "status"
            ],
            "properties": {
              "connections": {
                "type": "integer",
                "minimum": 0
              },
              "status": {
                "type": "string"
              },
              "subscriptions": {
                "type": "integer",
                "minimum": 0
              }
            }
          },
          "message": {
            "type": [
              "string",
              "null"
            ]
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "AuthResponse": {
        "type": "object",
        "required": [
          "user",
          "access_token",
          "refresh_token",
          "expires_in"
        ],
        "properties": {
          "access_token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "expires_in": {
            "type": "integer",
            "format": "int64",
            "example": 3600
          },
          "refresh_token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "user": {
            "$ref": "#/components/schemas/UserResponse"
          }
        }
      },
      "CollectionPermission": {
        "type": "object",
        "required": [
          "id",
          "collection_id",
          "role_id",
          "can_create",
          "can_read",
          "can_update",
          "can_delete",
          "can_list",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "can_create": {
            "type": "boolean"
          },
          "can_delete": {
            "type": "boolean"
          },
          "can_list": {
            "type": "boolean"
          },
          "can_read": {
            "type": "boolean"
          },
          "can_update": {
            "type": "boolean"
          },
          "collection_id": {
            "type": "integer",
            "format": "int32"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "role_id": {
            "type": "integer",
            "format": "int32"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CollectionResponse": {
        "type": "object",
        "required": [
          "id",
          "name",
          "schema",
          "is_system",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "created_at": {
            "type": "string",
            "example": "2024-01-01 12:00:00"
          },
          "description": {
            "type": [
              "string",
              "null"
            ],
            "example": "Collection for storing product data"
          },
          "display_name": {
            "type": [
              "string",
              "null"
            ],
            "example": "Product Collection"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "is_system": {
            "type": "boolean",
            "example": false
          },
          "name": {
            "type": "string",
            "example": "products"
          },
          "schema": {
            "$ref": "#/components/schemas/CollectionSchema"
          },
          "updated_at": {
            "type": "string",
            "example": "2024-01-01 12:00:00"
          }
        }
      },
      "CollectionSchema": {
        "type": "object",
        "required": [
          "fields"
        ],
        "properties": {
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FieldDefinition"
            }
          }
        }
      },
      "CollectionStats": {
        "type": "object",
        "required": [
          "total_collections",
          "total_records",
          "collections_by_type",
          "records_per_collection",
          "field_types_distribution",
          "average_records_per_collection"
        ],
        "properties": {
          "average_records_per_collection": {
            "type": "number",
            "format": "double"
          },
          "collections_by_type": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int64"
            },
            "propertyNames": {
              "type": "string"
            }
          },
          "field_types_distribution": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int64"
            },
            "propertyNames": {
              "type": "string"
            }
          },
          "largest_collection": {
            "type": [
              "string",
              "null"
            ]
          },
          "records_per_collection": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int64"
            },
            "propertyNames": {
              "type": "string"
            }
          },
          "smallest_collection": {
            "type": [
              "string",
              "null"
            ]
          },
          "total_collections": {
            "type": "integer",
            "format": "int64"
          },
          "total_records": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "CreateCollectionRequest": {
        "type": "object",
        "required": [
          "name",
          "schema"
        ],
        "properties": {
          "description": {
            "type": [
              "string",
              "null"
            ],
            "example": "Collection for storing product data"
          },
          "display_name": {
            "type": [
              "string",
              "null"
            ],
            "example": "Product Collection"
          },
          "name": {
            "type": "string",
            "example": "products",
            "maxLength": 50,
            "minLength": 1
          },
          "schema": {
            "$ref": "#/components/schemas/CollectionSchema"
          }
        }
      },
      "CreateRecordRequest": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {

          }
        }
      },
      "CreateRoleRequest": {
        "type": "object",
        "required": [
          "name",
          "priority"
        ],
        "properties": {
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "name": {
            "type": "string"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "DatabaseHealth": {
        "type": "object",
        "required": [
          "status",
          "connection_pool_size",
          "active_connections",
          "total_collections",
          "total_records"
        ],
        "properties": {
          "active_connections": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          "connection_pool_size": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          "status": {
            "type": "string"
          },
          "total_collections": {
            "type": "integer",
            "format": "int64"
          },
          "total_records": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "required": [
          "success",
          "error"
        ],
        "properties": {
          "details": {
            "type": [
              "string",
              "null"
            ]
          },
          "error": {
            "type": "string"
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "FieldDefinition": {
        "type": "object",
        "required": [
          "name",
          "field_type",
          "required"
        ],
        "properties": {
          "default_value": {

          },
          "field_type": {
            "$ref": "#/components/schemas/FieldType"
          },
          "name": {
            "type": "string",
            "example": "name"
          },
          "required": {
            "type": "boolean",
            "example": true
          },
          "validation": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/ValidationRules"
              }
            ]
          }
        }
      },
      "FieldType": {
        "type": "string",
        "enum": [
          "text",
          "number",
          "boolean",
          "date",
          "email",
          "url",
          "json",
          "file",
          "relation"
        ]
      },
      "GetOwnedRecordsQuery": {
        "type": "object",
        "properties": {
          "limit": {
            "type": [
              "integer",
              "null"
            ],
            "format": "int64"
          },
          "offset": {
            "type": [
              "integer",
              "null"
            ],
            "format": "int64"
          }
        }
      },
      "HealthResponse": {
        "type": "object",
        "required": [
          "status",
          "message",
          "timestamp",
          "version",
          "uptime",
          "database",
          "memory",
          "system"
        ],
        "properties": {
          "database": {
            "$ref": "#/components/schemas/DatabaseHealth"
          },
          "memory": {
            "$ref": "#/components/schemas/MemoryInfo"
          },
          "message": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "system": {
            "$ref": "#/components/schemas/SystemInfo"
          },
          "timestamp": {
            "type": "string"
          },
          "uptime": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "version": {
            "type": "string"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "example": "SecurePassword123!"
          }
        }
      },
      "MemoryInfo": {
        "type": "object",
        "required": [
          "used_mb",
          "total_mb",
          "usage_percentage"
        ],
        "properties": {
          "total_mb": {
            "type": "number",
            "format": "double"
          },
          "usage_percentage": {
            "type": "number",
            "format": "double"
          },
          "used_mb": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "RecordPermission": {
        "type": "object",
        "required": [
          "id",
          "record_id",
          "collection_id",
          "user_id",
          "can_read",
          "can_update",
          "can_delete",
          "created_at"
        ],
        "properties": {
          "can_delete": {
            "type": "boolean"
          },
          "can_read": {
            "type": "boolean"
          },
          "can_update": {
            "type": "boolean"
          },
          "collection_id": {
            "type": "integer",
            "format": "int32"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "record_id": {
            "type": "integer",
            "format": "int32"
          },
          "user_id": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "RecordResponse": {
        "type": "object",
        "required": [
          "id",
          "collection_id",
          "data",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "collection_id": {
            "type": "string",
            "example": "products"
          },
          "created_at": {
            "type": "string",
            "example": "2024-01-01 12:00:00"
          },
          "data": {

          },
          "id": {
            "type": "string",
            "example": "1"
          },
          "updated_at": {
            "type": "string",
            "example": "2024-01-01 12:00:00"
          }
        }
      },
      "RegisterRequest": {
        "type": "object",
        "required": [
          "email",
          "password",
          "username"
        ],
        "properties": {
          "email": {
            "type": "string",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "example": "SecurePassword123!",
            "minLength": 8
          },
          "username": {
            "type": "string",
            "example": "john_doe",
            "maxLength": 30,
            "minLength": 3
          }
        }
      },
      "Role": {
        "type": "object",
        "required": [
          "id",
          "name",
          "priority",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "SetCollectionPermissionRequest": {
        "type": "object",
        "required": [
          "role_id",
          "can_create",
          "can_read",
          "can_update",
          "can_delete",
          "can_list"
        ],
        "properties": {
          "can_create": {
            "type": "boolean"
          },
          "can_delete": {
            "type": "boolean"
          },
          "can_list": {
            "type": "boolean"
          },
          "can_read": {
            "type": "boolean"
          },
          "can_update": {
            "type": "boolean"
          },
          "role_id": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SetRecordPermissionRequest": {
        "type": "object",
        "required": [
          "record_id",
          "user_id",
          "can_read",
          "can_update",
          "can_delete"
        ],
        "properties": {
          "can_delete": {
            "type": "boolean"
          },
          "can_read": {
            "type": "boolean"
          },
          "can_update": {
            "type": "boolean"
          },
          "record_id": {
            "type": "integer",
            "format": "int32"
          },
          "user_id": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SetUserCollectionPermissionRequest": {
        "type": "object",
        "properties": {
          "can_create": {
            "type": [
              "boolean",
              "null"
            ]
          },
          "can_delete": {
            "type": [
              "boolean",
              "null"
            ]
          },
          "can_list": {
            "type": [
              "boolean",
              "null"
            ]
          },
          "can_read": {
            "type": [
              "boolean",
              "null"
            ]
          },
          "can_update": {
            "type": [
              "boolean",
              "null"
            ]
          }
        }
      },
      "SystemInfo": {
        "type": "object",
        "required": [
          "cpu_usage",
          "load_average",
          "disk_usage_percentage"
        ],
        "properties": {
          "cpu_usage": {
            "type": "number",
            "format": "double"
          },
          "disk_usage_percentage": {
            "type": "number",
            "format": "double"
          },
          "load_average": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "TransferOwnershipRequest": {
        "type": "object",
        "required": [
          "new_owner_id"
        ],
        "properties": {
          "new_owner_id": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UpdateCollectionRequest": {
        "type": "object",
        "properties": {
          "description": {
            "type": [
              "string",
              "null"
            ],
            "example": "Updated description for product collection"
          },
          "display_name": {
            "type": [
              "string",
              "null"
            ],
            "example": "Updated Product Collection"
          },
          "schema": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/CollectionSchema"
              }
            ]
          }
        }
      },
      "UpdateRecordRequest": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {

          }
        }
      },
      "UserCollectionPermission": {
        "type": "object",
        "required": [
          "id",
          "user_id",
          "collection_id",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "can_create": {
            "type": [
              "boolean",
              "null"
            ]
          },
          "can_delete": {
            "type": [
              "boolean",
              "null"
            ]
          },
          "can_list": {
            "type": [
              "boolean",
              "null"
            ]
          },
          "can_read": {
            "type": [
              "boolean",
              "null"
            ]
          },
          "can_update": {
            "type": [
              "boolean",
              "null"
            ]
          },
          "collection_id": {
            "type": "integer",
            "format": "int32"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "user_id": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UserResponse": {
        "type": "object",
        "required": [
          "id",
          "email",
          "username",
          "is_verified",
          "role",
          "created_at"
        ],
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "email": {
            "type": "string",
            "example": "user@example.com"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "is_verified": {
            "type": "boolean",
            "example": true
          },
          "role": {
            "type": "string",
            "example": "user"
          },
          "username": {
            "type": "string",
            "example": "john_doe"
          }
        }
      },
      "ValidationRules": {
        "type": "object",
        "properties": {
          "enum_values": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            },
            "example": [
              "option1",
              "option2"
            ]
          },
          "max_length": {
            "type": [
              "integer",
              "null"
            ],
            "example": 100,
            "minimum": 0
          },
          "max_value": {
            "type": [
              "number",
              "null"
            ],
            "format": "double",
            "example": 1000
          },
          "min_length": {
            "type": [
              "integer",
              "null"
            ],
            "example": 1,
            "minimum": 0
          },
          "min_value": {
            "type": [
              "number",
              "null"
            ],
            "format": "double",
            "example": 0
          },
          "pattern": {
            "type": [
              "string",
              "null"
            ],
            "example": "^[a-zA-Z0-9]+$"
          }
        }
      },
      "WebSocketStats": {
        "type": "object",
        "required": [
          "total_connections",
          "authenticated_connections",
          "total_subscriptions",
          "subscriptions_by_collection"
        ],
        "properties": {
          "authenticated_connections": {
            "type": "integer",
            "minimum": 0
          },
          "subscriptions_by_collection": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "minimum": 0
            },
            "propertyNames": {
              "type": "string"
            }
          },
          "total_connections": {
            "type": "integer",
            "minimum": 0
          },
          "total_subscriptions": {
            "type": "integer",
            "minimum": 0
          }
        }
      },
      "WebSocketStatus": {
        "type": "object",
        "required": [
          "connections",
          "subscriptions",
          "status"
        ],
        "properties": {
          "connections": {
            "type": "integer",
            "minimum": 0
          },
          "status": {
            "type": "string"
          },
          "subscriptions": {
            "type": "integer",
            "minimum": 0
          }
        }
      }
    },
    "securitySchemes": {
      "bearer_auth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "tags": [
    {
      "name": "Authentication",
      "description": "User authentication and authorization"
    },
    {
      "name": "Collections",
      "description": "Collection management operations"
    },
    {
      "name": "Records",
      "description": "Record CRUD operations"
    },
    {
      "name": "Permissions",
      "description": "Role and permission management"
    },
    {
      "name": "Record Permissions",
      "description": "Record-level permission management"
    },
    {
      "name": "Ownership",
      "description": "Record ownership management"
    },
    {
      "name": "WebSocket",
      "description": "WebSocket connections and real-time features"
    },
    {
      "name": "Health",
      "description": "System health checks"
    }
  ]
}